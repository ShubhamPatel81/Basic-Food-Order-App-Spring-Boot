spring.application.name=ecommerce

spring.h2.console.enabled=true

spring.datasource.url=jdbc:h2:file:./db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true


server.port=8080
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

#Oauth2 configure
spring.security.oauth2.client.registration.google.client-id= 930244459376-2ev9tu8r1ddjb83s3i7pu8rji01ha9l7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret= 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

#Redis Configuration
spring.redis.host= localhost
spring.redis.port= 6379




























#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email = 